<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Task List</title>
</head>
<body>
    <form id="taskForm">
        <input type="text" id="title" placeholder="Title" required>
        <input type="text" id="description" placeholder="Description">
        <input type="date" id="dueDate" required>
        <input type="text" id="priority" placeholder="Priority" required>
        <input type="text" id="assigned_to" placeholder="Assigned To">
        <input type="text" id="assigned_by" placeholder="Assigned By">
        <button type="submit">Add Task</button>
    </form>
    <ul id="taskList"></ul>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const taskForm = document.getElementById('taskForm');
            const taskList = document.getElementById('taskList');

            // Fetch and display all tasks
            fetchTasks();

            taskForm.addEventListener('submit', (e) => {
                e.preventDefault();

                const title = document.getElementById('title').value;
                const description = document.getElementById('description').value;
                const dueDate = document.getElementById('dueDate').value;
                const priority = document.getElementById('priority').value;
                const assigned_to = document.getElementById('assigned_to').value;
                const assigned_by = document.getElementById('assigned_by').value;

                const task = { title, description, dueDate, priority, assigned_to, assigned_by };

                fetch('/task', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(task),
                })
                .then(response => response.json())
                .then(data => {
                    console.log('Task added:', data);
                    addTaskToList(data);
                    taskForm.reset();
                })
                .catch(error => {
                    console.error('Error adding task:', error.message);
                    alert('Error adding task: ' + error.message);
                });
            });

            function fetchTasks() {
                fetch('/task', { headers: { 'X-Requested-With': 'XMLHttpRequest' } })
                    .then(response => response.json())
                    .then(tasks => {
                        taskList.innerHTML = ''; // Clear existing tasks
                        tasks.forEach(task => addTaskToList(task));
                    })
                    .catch(error => {
                        console.error('Error fetching tasks:', error.message);
                        alert('Error fetching tasks: ' + error.message);
                    });
            }

            function addTaskToList(task) {
                const li = document.createElement('li');
                li.dataset.id = task.id;
                li.innerHTML = `
                    <span><strong>${task.title}</strong> - ${task.description} (Due: ${new Date(task.dueDate).toLocaleDateString()}, Priority: ${task.priority}, Assigned to: ${task.assigned_to}, Assigned by: ${task.assigned_by}) - Status: ${task.status || 'Pending'}</span>
                    <div>
                        <button class="complete">Complete</button>
                        <button class="edit">Edit</button>
                        <button class="delete">Delete</button>
                    </div>
                `;

                li.querySelector('.complete').addEventListener('click', () => {
                    updateTaskStatus(task.id, 'Completed');
                });

                li.querySelector('.edit').addEventListener('click', () => {
                    editTask(task);
                });

                li.querySelector('.delete').addEventListener('click', () => {
                    deleteTask(task.id, li);
                });

                taskList.appendChild(li);
            }

            function updateTaskStatus(id, status) {
                fetch(`/task/${id}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ status }),
                })
                .then(response => response.json())
                .then(updatedTask => {
                    const taskItem = taskList.querySelector(`[data-id='${updatedTask.id}']`);
                    if (taskItem) {
                        taskItem.querySelector('span').textContent = `${updatedTask.title} - ${updatedTask.description} (Due: ${new Date(updatedTask.dueDate).toLocaleDateString()}, Priority: ${updatedTask.priority}, Assigned to: ${updatedTask.assigned_to}, Assigned by: ${updatedTask.assigned_by}) - Status: ${updatedTask.status}`;
                    } else {
                        console.error(`Task with id ${updatedTask.id} not found in the list.`);
                    }
                })
                .catch(error => {
                    console.error('Error updating task status:', error.message);
                    alert('Error updating task status: ' + error.message);
                });
            }

            function editTask(task) {
                const newTitle = prompt('Edit Task Title', task.title);
                const newDescription = prompt('Edit Task Description', task.description);
                const newDueDate = prompt('Edit Due Date', new Date(task.dueDate).toISOString().substring(0, 10));
                const newPriority = prompt('Edit Priority', task.priority);
                const newAssignedTo = prompt('Edit Assigned To', task.assigned_to);
                const newAssignedBy = prompt('Edit Assigned By', task.assigned_by);

                fetch(`/task/${task.id}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        title: newTitle,
                        description: newDescription,
                        dueDate: newDueDate,
                        priority: newPriority,
                        assigned_to: newAssignedTo,
                        assigned_by: newAssignedBy,
                    }),
                })
                .then(response => response.json())
                .then(updatedTask => {
                    const taskItem = taskList.querySelector(`[data-id='${updatedTask.id}']`);
                    taskItem.querySelector('span').textContent = `${updatedTask.title} - ${updatedTask.description} (Due: ${new Date(updatedTask.dueDate).toLocaleDateString()}, Priority: ${updatedTask.priority}, Assigned to: ${updatedTask.assigned_to}, Assigned by: ${updatedTask.assigned_by}) - Status: ${updatedTask.status}`;
                })
                .catch(error => {
                    console.error('Error editing task:', error.message);
                    alert('Error editing task: ' + error.message);
                });
            }

            function deleteTask(id, taskElement) {
                fetch(`/task/${id}`, {
                    method: 'DELETE',
                })
                .then(() => {
                    taskElement.remove();
                })
                .catch(error => {
                    console.error('Error deleting task:', error.message);
                    alert('Error deleting task: ' + error.message);
                });
            }
        });
    </script>
</body>
</html>
