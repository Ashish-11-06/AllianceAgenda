<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AA Communication</title>

    <style>
        #messages {
            border: 1px solid #ccc;
            padding: 20px;
            overflow-y: auto;
            width: 100%;
            max-width: 800px;
            height: 200px;
            transition: height 0.3s;
        }

        #message-form {
            display: flex;
            width: 100%;
            max-width: 800px;
            background-color: #f2f2f2;
            padding: 10px;
            border: 1px solid #ccc;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        #message-input,
        #username {
            flex-grow: 1;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            margin-right: 10px;
        }

        #message-input {
            font-size: 16px;
        }

        button {
            padding: 10px 20px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        button:hover {
            background-color: #0056b3;
        }

        p {
            margin: 5px 0;
            font-size: 14px;
        }

        #messages p {
            padding: 10px;
            border-radius: 10px;
            margin-bottom: 10px;
        }

        #messages p:nth-child(even) {
            /* background-color: #f5f5f5; */
        }

        #messages p:hover {
            background-color: #f9f9f9;
        }

        #message-input:focus {
            outline: none;
            box-shadow: 0 0 3px rgba(0, 0, 0, 0.2);
        }

        #messages .sent {
            align-self: flex-end;
            text-align: right;
        }

        #messages .received {
            align-self: flex-start;
            text-align: left;
        }

        /* Username colors */
        .username-color-1 { color: #007bff; }
        .username-color-2 { color: #28a745; }
        .username-color-3 { color: #dc3545; }
        .username-color-4 { color: #ffc107; }
    </style>
</head>

<body>
    <div id="messages"></div>
    <form id="message-form">
        <input type="text" id="username" placeholder="Enter your username..." class="sent">
        <input type="text" id="message-input" placeholder="Type your message here...">
        <button type="submit">Send</button>
    </form>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>

    <script>
        const messagesDiv = $("#messages");
        const messageForm = $("#message-form");
        const messageInput = $("#message-input");
        const usernameInput = $("#username");

        const socket = io("http://localhost:3000");

        const scrollToBottom = () => {
            messagesDiv.scrollTop(messagesDiv[0].scrollHeight);
        };

        const adjustMessagesHeight = () => {
            const numMessages = messagesDiv.children().length;
            const baseHeight = 200;
            const heightPerMessage = 20;
            const maxDivHeight = 400;

            const newHeight = Math.min(baseHeight + numMessages * heightPerMessage, maxDivHeight);
            messagesDiv.css("height", `${newHeight}px`);
        };

        const sendMessage = () => {
            const username = usernameInput.val().trim();
            const message = messageInput.val().trim();

            if (username && message) {
                socket.emit("chat message", { username, message });
            }
        };

        socket.on("chat message", (data) => {
            const currentUser = usernameInput.val().trim();
            const messageElement = $("<p></p>").addClass(data.username === currentUser ? 'sent' : 'received');

            const usernameClass = `username-color-${data.username.length % 4 + 1}`;
            messageElement.html(`<strong class="${usernameClass}">${data.username} (${data.timestamp}):</strong> ${data.message}`);
            messagesDiv.append(messageElement);

            scrollToBottom();
            adjustMessagesHeight();
        });

        messageForm.on("submit", (e) => {
            e.preventDefault();
            sendMessage();
            messageInput.val("");
        });

        const fetchOldMessages = () => {
            $.get('/messages', function (data) {
                data.forEach(function (message) {
                    const formattedTimestamp = new Date(message.timestamp).toLocaleString();
                    const messageElement = $("<p></p>");
                    const usernameClass = `username-color-${message.username.length % 4 + 1}`;

                    messageElement.html(`<strong class="${usernameClass}">${message.username} (${formattedTimestamp}):</strong> ${message.message}`);
                    messagesDiv.append(messageElement);
                });

                adjustMessagesHeight();
                scrollToBottom();
            });
        };

        $(document).ready(function () {
            fetchOldMessages();
        });
    </script>
</body>

</html>
